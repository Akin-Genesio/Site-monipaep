"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var L = __importStar(require("leaflet"));
var core_1 = require("@react-leaflet/core");
require("leaflet.gridlayer.googlemutant");
var js_api_loader_1 = require("@googlemaps/js-api-loader");
var googleMapsScriptLoaded = false;
var createLeafletElement = function (props, context) {
    var _a = props.apiKey, apiKey = _a === void 0 ? '' : _a, _b = props.useGoogMapsLoader, useGoogMapsLoader = _b === void 0 ? true : _b, _c = props.googleMapsLoaderConf, googleMapsLoaderConf = _c === void 0 ? {} : _c, googleMapsAddLayers = props.googleMapsAddLayers, googleMutantProps = __rest(props, ["apiKey", "useGoogMapsLoader", "googleMapsLoaderConf", "googleMapsAddLayers"]);
    if (useGoogMapsLoader && !googleMapsScriptLoaded) {
        var loader = new js_api_loader_1.Loader(__assign({ apiKey: apiKey }, googleMapsLoaderConf));
        loader.load();
        googleMapsScriptLoaded = true;
    }
    var instance = L.gridLayer.googleMutant(googleMutantProps);
    if (googleMapsAddLayers) {
        googleMapsAddLayers.forEach(function (layer) {
            instance.addGoogleLayer(layer.name, layer.options);
        });
    }
    return { instance: instance, context: context };
};
exports.default = core_1.createLayerComponent(createLeafletElement, core_1.updateGridLayer);
